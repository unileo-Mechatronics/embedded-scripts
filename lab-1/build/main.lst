ARM GAS  /tmp/ccgalnVP.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/main.c"
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB151:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** 
  19:Core/Src/main.c **** /*
  20:Core/Src/main.c **** LEONARDO PASQUATO NOTES
  21:Core/Src/main.c **** This code remains stuck inside the loop for wrong increment position: postdecrementing b in bar fun
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** This issue was found both by intuition because I already have some expertise on C and in particular
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Header */
  30:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  31:Core/Src/main.c **** #include "main.h"
  32:Core/Src/main.c **** 
ARM GAS  /tmp/ccgalnVP.s 			page 2


  33:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END Includes */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PTD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  49:Core/Src/main.c **** /* USER CODE BEGIN PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PM */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** COM_InitTypeDef BspCOMInit;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PV */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  62:Core/Src/main.c **** void SystemClock_Config(void);
  63:Core/Src/main.c **** static void MPU_Config(void);
  64:Core/Src/main.c **** static void MX_GPIO_Init(void);
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** int foo(int a){
  68:Core/Src/main.c ****   int b = a++;
  69:Core/Src/main.c ****   return b * a;
  70:Core/Src/main.c **** }
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** int bar(int b){
  73:Core/Src/main.c ****   if(b > 3){
  74:Core/Src/main.c ****     return bar(b--);
  75:Core/Src/main.c ****   
  76:Core/Src/main.c ****   }
  77:Core/Src/main.c ****   return foo(b);
  78:Core/Src/main.c **** }
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE END PFP */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  83:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  84:Core/Src/main.c **** int k = 0;
  85:Core/Src/main.c **** int j = 0;
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* USER CODE END 0 */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /**
ARM GAS  /tmp/ccgalnVP.s 			page 3


  90:Core/Src/main.c ****   * @brief  The application entry point.
  91:Core/Src/main.c ****   * @retval int
  92:Core/Src/main.c ****   */
  93:Core/Src/main.c **** int main(void)
  94:Core/Src/main.c **** {
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END 1 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* MPU Configuration--------------------------------------------------------*/
 101:Core/Src/main.c ****   MPU_Config();
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 106:Core/Src/main.c ****   HAL_Init();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END Init */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Configure the system clock */
 113:Core/Src/main.c ****   SystemClock_Config();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END SysInit */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Initialize all configured peripherals */
 120:Core/Src/main.c ****   MX_GPIO_Init();
 121:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   int c = 5;
 124:Core/Src/main.c ****   // int result = bar(c);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END 2 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Initialize leds */
 129:Core/Src/main.c ****   BSP_LED_Init(LED_GREEN);
 130:Core/Src/main.c ****   BSP_LED_Init(LED_YELLOW);
 131:Core/Src/main.c ****   BSP_LED_Init(LED_RED);
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* Initialize USER push-button, will be used to trigger an interrupt each time it's pressed.*/
 134:Core/Src/main.c ****   BSP_PB_Init(BUTTON_USER, BUTTON_MODE_EXTI);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Initialize COM1 port (115200, 8 bits (7-bit data + 1 stop bit), no parity */
 137:Core/Src/main.c ****   BspCOMInit.BaudRate   = 115200;
 138:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 139:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 140:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 141:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 142:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c ****     Error_Handler();
 145:Core/Src/main.c ****   }
 146:Core/Src/main.c **** 
ARM GAS  /tmp/ccgalnVP.s 			page 4


 147:Core/Src/main.c ****   /* Infinite loop */
 148:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 149:Core/Src/main.c ****   while (1)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****     /* USER CODE END WHILE */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 155:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 156:Core/Src/main.c ****     HAL_Delay(1000);
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c ****   /* USER CODE END 3 */
 159:Core/Src/main.c **** }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /**
 162:Core/Src/main.c ****   * @brief System Clock Configuration
 163:Core/Src/main.c ****   * @retval None
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c **** void SystemClock_Config(void)
 166:Core/Src/main.c **** {
 167:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 168:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /** Supply configuration update enable
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 181:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 196:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     Error_Handler();
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 202:Core/Src/main.c ****   */
 203:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /tmp/ccgalnVP.s 			page 5


 204:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
 206:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 207:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 208:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 212:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 215:Core/Src/main.c ****   {
 216:Core/Src/main.c ****     Error_Handler();
 217:Core/Src/main.c ****   }
 218:Core/Src/main.c **** }
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /**
 221:Core/Src/main.c ****   * @brief GPIO Initialization Function
 222:Core/Src/main.c ****   * @param None
 223:Core/Src/main.c ****   * @retval None
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c **** static void MX_GPIO_Init(void)
 226:Core/Src/main.c **** {
  27              		.loc 1 226 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 82B0     		sub	sp, sp, #8
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
 227:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 232:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  35              		.loc 1 232 3 view .LVU1
  36              	.LBB4:
  37              		.loc 1 232 3 view .LVU2
  38              		.loc 1 232 3 view .LVU3
  39 0002 0D4B     		ldr	r3, .L3
  40 0004 D3F8E020 		ldr	r2, [r3, #224]
  41 0008 42F00402 		orr	r2, r2, #4
  42 000c C3F8E020 		str	r2, [r3, #224]
  43              		.loc 1 232 3 view .LVU4
  44 0010 D3F8E020 		ldr	r2, [r3, #224]
  45 0014 02F00402 		and	r2, r2, #4
  46 0018 0092     		str	r2, [sp]
  47              		.loc 1 232 3 view .LVU5
  48 001a 009A     		ldr	r2, [sp]
  49              	.LBE4:
  50              		.loc 1 232 3 view .LVU6
 233:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  51              		.loc 1 233 3 view .LVU7
  52              	.LBB5:
  53              		.loc 1 233 3 view .LVU8
ARM GAS  /tmp/ccgalnVP.s 			page 6


  54              		.loc 1 233 3 view .LVU9
  55 001c D3F8E020 		ldr	r2, [r3, #224]
  56 0020 42F00102 		orr	r2, r2, #1
  57 0024 C3F8E020 		str	r2, [r3, #224]
  58              		.loc 1 233 3 view .LVU10
  59 0028 D3F8E030 		ldr	r3, [r3, #224]
  60 002c 03F00103 		and	r3, r3, #1
  61 0030 0193     		str	r3, [sp, #4]
  62              		.loc 1 233 3 view .LVU11
  63 0032 019B     		ldr	r3, [sp, #4]
  64              	.LBE5:
  65              		.loc 1 233 3 view .LVU12
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 238:Core/Src/main.c **** }
  66              		.loc 1 238 1 is_stmt 0 view .LVU13
  67 0034 02B0     		add	sp, sp, #8
  68              	.LCFI1:
  69              		.cfi_def_cfa_offset 0
  70              		@ sp needed
  71 0036 7047     		bx	lr
  72              	.L4:
  73              		.align	2
  74              	.L3:
  75 0038 00440258 		.word	1476543488
  76              		.cfi_endproc
  77              	.LFE151:
  79              		.section	.text.MPU_Config,"ax",%progbits
  80              		.align	1
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	MPU_Config:
  86              	.LFB152:
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** /* USER CODE END 4 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****  /* MPU Configuration */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** void MPU_Config(void)
 247:Core/Src/main.c **** {
  87              		.loc 1 247 1 is_stmt 1 view -0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 16
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 10B5     		push	{r4, lr}
  92              	.LCFI2:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 84B0     		sub	sp, sp, #16
  97              	.LCFI3:
  98              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccgalnVP.s 			page 7


 248:Core/Src/main.c ****   MPU_Region_InitTypeDef MPU_InitStruct = {0};
  99              		.loc 1 248 3 view .LVU15
 100              		.loc 1 248 26 is_stmt 0 view .LVU16
 101 0004 0024     		movs	r4, #0
 102 0006 0094     		str	r4, [sp]
 103 0008 0194     		str	r4, [sp, #4]
 104 000a 0294     		str	r4, [sp, #8]
 105 000c 0394     		str	r4, [sp, #12]
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* Disables the MPU */
 251:Core/Src/main.c ****   HAL_MPU_Disable();
 106              		.loc 1 251 3 is_stmt 1 view .LVU17
 107 000e FFF7FEFF 		bl	HAL_MPU_Disable
 108              	.LVL0:
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /** Initializes and configures the Region and the memory to be protected
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c ****   MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 109              		.loc 1 255 3 view .LVU18
 110              		.loc 1 255 25 is_stmt 0 view .LVU19
 111 0012 0123     		movs	r3, #1
 112 0014 8DF80030 		strb	r3, [sp]
 256:Core/Src/main.c ****   MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 113              		.loc 1 256 3 is_stmt 1 view .LVU20
 114              		.loc 1 256 25 is_stmt 0 view .LVU21
 115 0018 8DF80140 		strb	r4, [sp, #1]
 257:Core/Src/main.c ****   MPU_InitStruct.BaseAddress = 0x0;
 116              		.loc 1 257 3 is_stmt 1 view .LVU22
 117              		.loc 1 257 30 is_stmt 0 view .LVU23
 118 001c 0194     		str	r4, [sp, #4]
 258:Core/Src/main.c ****   MPU_InitStruct.Size = MPU_REGION_SIZE_4GB;
 119              		.loc 1 258 3 is_stmt 1 view .LVU24
 120              		.loc 1 258 23 is_stmt 0 view .LVU25
 121 001e 1F22     		movs	r2, #31
 122 0020 8DF80820 		strb	r2, [sp, #8]
 259:Core/Src/main.c ****   MPU_InitStruct.SubRegionDisable = 0x87;
 123              		.loc 1 259 3 is_stmt 1 view .LVU26
 124              		.loc 1 259 35 is_stmt 0 view .LVU27
 125 0024 8722     		movs	r2, #135
 126 0026 8DF80920 		strb	r2, [sp, #9]
 260:Core/Src/main.c ****   MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 127              		.loc 1 260 3 is_stmt 1 view .LVU28
 128              		.loc 1 260 31 is_stmt 0 view .LVU29
 129 002a 8DF80A40 		strb	r4, [sp, #10]
 261:Core/Src/main.c ****   MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 130              		.loc 1 261 3 is_stmt 1 view .LVU30
 131              		.loc 1 261 35 is_stmt 0 view .LVU31
 132 002e 8DF80B40 		strb	r4, [sp, #11]
 262:Core/Src/main.c ****   MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 133              		.loc 1 262 3 is_stmt 1 view .LVU32
 134              		.loc 1 262 30 is_stmt 0 view .LVU33
 135 0032 8DF80C30 		strb	r3, [sp, #12]
 263:Core/Src/main.c ****   MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 136              		.loc 1 263 3 is_stmt 1 view .LVU34
 137              		.loc 1 263 30 is_stmt 0 view .LVU35
 138 0036 8DF80D30 		strb	r3, [sp, #13]
 264:Core/Src/main.c ****   MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
ARM GAS  /tmp/ccgalnVP.s 			page 8


 139              		.loc 1 264 3 is_stmt 1 view .LVU36
 140              		.loc 1 264 30 is_stmt 0 view .LVU37
 141 003a 8DF80E40 		strb	r4, [sp, #14]
 265:Core/Src/main.c ****   MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 142              		.loc 1 265 3 is_stmt 1 view .LVU38
 143              		.loc 1 265 31 is_stmt 0 view .LVU39
 144 003e 8DF80F40 		strb	r4, [sp, #15]
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   HAL_MPU_ConfigRegion(&MPU_InitStruct);
 145              		.loc 1 267 3 is_stmt 1 view .LVU40
 146 0042 6846     		mov	r0, sp
 147 0044 FFF7FEFF 		bl	HAL_MPU_ConfigRegion
 148              	.LVL1:
 268:Core/Src/main.c ****   /* Enables the MPU */
 269:Core/Src/main.c ****   HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 149              		.loc 1 269 3 view .LVU41
 150 0048 0420     		movs	r0, #4
 151 004a FFF7FEFF 		bl	HAL_MPU_Enable
 152              	.LVL2:
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** }
 153              		.loc 1 271 1 is_stmt 0 view .LVU42
 154 004e 04B0     		add	sp, sp, #16
 155              	.LCFI4:
 156              		.cfi_def_cfa_offset 8
 157              		@ sp needed
 158 0050 10BD     		pop	{r4, pc}
 159              		.cfi_endproc
 160              	.LFE152:
 162              		.section	.text.foo,"ax",%progbits
 163              		.align	1
 164              		.global	foo
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	foo:
 170              	.LVL3:
 171              	.LFB147:
  67:Core/Src/main.c ****   int b = a++;
 172              		.loc 1 67 15 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
  68:Core/Src/main.c ****   return b * a;
 177              		.loc 1 68 3 view .LVU44
  69:Core/Src/main.c **** }
 178              		.loc 1 69 3 view .LVU45
  70:Core/Src/main.c **** 
 179              		.loc 1 70 1 is_stmt 0 view .LVU46
 180 0000 00FB0000 		mla	r0, r0, r0, r0
 181              	.LVL4:
  70:Core/Src/main.c **** 
 182              		.loc 1 70 1 view .LVU47
 183 0004 7047     		bx	lr
 184              		.cfi_endproc
 185              	.LFE147:
ARM GAS  /tmp/ccgalnVP.s 			page 9


 187              		.section	.text.bar,"ax",%progbits
 188              		.align	1
 189              		.global	bar
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 194              	bar:
 195              	.LVL5:
 196              	.LFB148:
  72:Core/Src/main.c ****   if(b > 3){
 197              		.loc 1 72 15 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
  72:Core/Src/main.c ****   if(b > 3){
 201              		.loc 1 72 15 is_stmt 0 view .LVU49
 202 0000 08B5     		push	{r3, lr}
 203              	.LCFI5:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 3, -8
 206              		.cfi_offset 14, -4
  73:Core/Src/main.c ****     return bar(b--);
 207              		.loc 1 73 3 is_stmt 1 view .LVU50
  73:Core/Src/main.c ****     return bar(b--);
 208              		.loc 1 73 5 is_stmt 0 view .LVU51
 209 0002 0328     		cmp	r0, #3
 210 0004 02DC     		bgt	.L12
  77:Core/Src/main.c **** }
 211              		.loc 1 77 3 is_stmt 1 view .LVU52
  77:Core/Src/main.c **** }
 212              		.loc 1 77 10 is_stmt 0 view .LVU53
 213 0006 FFF7FEFF 		bl	foo
 214              	.LVL6:
 215              	.L8:
  78:Core/Src/main.c **** 
 216              		.loc 1 78 1 view .LVU54
 217 000a 08BD     		pop	{r3, pc}
 218              	.LVL7:
 219              	.L12:
  74:Core/Src/main.c ****   
 220              		.loc 1 74 5 is_stmt 1 view .LVU55
  74:Core/Src/main.c ****   
 221              		.loc 1 74 12 is_stmt 0 view .LVU56
 222 000c FFF7FEFF 		bl	bar
 223              	.LVL8:
  74:Core/Src/main.c ****   
 224              		.loc 1 74 12 view .LVU57
 225 0010 FBE7     		b	.L8
 226              		.cfi_endproc
 227              	.LFE148:
 229              		.section	.text.Error_Handler,"ax",%progbits
 230              		.align	1
 231              		.global	Error_Handler
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	Error_Handler:
ARM GAS  /tmp/ccgalnVP.s 			page 10


 237              	.LFB153:
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /**
 274:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 275:Core/Src/main.c ****   * @retval None
 276:Core/Src/main.c ****   */
 277:Core/Src/main.c **** void Error_Handler(void)
 278:Core/Src/main.c **** {
 238              		.loc 1 278 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ Volatile: function does not return.
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 279:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 280:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 281:Core/Src/main.c ****   __disable_irq();
 244              		.loc 1 281 3 view .LVU59
 245              	.LBB6:
 246              	.LBI6:
 247              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  /tmp/ccgalnVP.s 			page 11


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccgalnVP.s 			page 12


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccgalnVP.s 			page 13


 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  /tmp/ccgalnVP.s 			page 14


 248              		.loc 2 207 27 view .LVU60
 249              	.LBB7:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 250              		.loc 2 209 3 view .LVU61
 251              		.syntax unified
 252              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 253 0000 72B6     		cpsid i
 254              	@ 0 "" 2
 255              		.thumb
 256              		.syntax unified
 257              	.L14:
 258              	.LBE7:
 259              	.LBE6:
 282:Core/Src/main.c ****   while (1)
 260              		.loc 1 282 3 view .LVU62
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****   }
 261              		.loc 1 284 3 view .LVU63
 282:Core/Src/main.c ****   while (1)
 262              		.loc 1 282 9 view .LVU64
 263 0002 FEE7     		b	.L14
 264              		.cfi_endproc
 265              	.LFE153:
 267              		.section	.text.SystemClock_Config,"ax",%progbits
 268              		.align	1
 269              		.global	SystemClock_Config
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 274              	SystemClock_Config:
 275              	.LFB150:
 166:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 276              		.loc 1 166 1 view -0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 112
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280 0000 10B5     		push	{r4, lr}
 281              	.LCFI6:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 4, -8
 284              		.cfi_offset 14, -4
 285 0002 9CB0     		sub	sp, sp, #112
 286              	.LCFI7:
 287              		.cfi_def_cfa_offset 120
 167:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 288              		.loc 1 167 3 view .LVU66
 167:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 289              		.loc 1 167 22 is_stmt 0 view .LVU67
 290 0004 4C22     		movs	r2, #76
 291 0006 0021     		movs	r1, #0
 292 0008 09A8     		add	r0, sp, #36
 293 000a FFF7FEFF 		bl	memset
 294              	.LVL9:
 168:Core/Src/main.c **** 
 295              		.loc 1 168 3 is_stmt 1 view .LVU68
 168:Core/Src/main.c **** 
ARM GAS  /tmp/ccgalnVP.s 			page 15


 296              		.loc 1 168 22 is_stmt 0 view .LVU69
 297 000e 2022     		movs	r2, #32
 298 0010 0021     		movs	r1, #0
 299 0012 01A8     		add	r0, sp, #4
 300 0014 FFF7FEFF 		bl	memset
 301              	.LVL10:
 172:Core/Src/main.c **** 
 302              		.loc 1 172 3 is_stmt 1 view .LVU70
 303 0018 0220     		movs	r0, #2
 304 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 305              	.LVL11:
 176:Core/Src/main.c **** 
 306              		.loc 1 176 3 view .LVU71
 307              	.LBB8:
 176:Core/Src/main.c **** 
 308              		.loc 1 176 3 view .LVU72
 309 001e 0023     		movs	r3, #0
 310 0020 0093     		str	r3, [sp]
 176:Core/Src/main.c **** 
 311              		.loc 1 176 3 view .LVU73
 312 0022 214A     		ldr	r2, .L22
 313 0024 9369     		ldr	r3, [r2, #24]
 314 0026 23F44043 		bic	r3, r3, #49152
 315 002a 43F40043 		orr	r3, r3, #32768
 316 002e 9361     		str	r3, [r2, #24]
 176:Core/Src/main.c **** 
 317              		.loc 1 176 3 view .LVU74
 318 0030 9369     		ldr	r3, [r2, #24]
 319 0032 03F44043 		and	r3, r3, #49152
 320 0036 0093     		str	r3, [sp]
 176:Core/Src/main.c **** 
 321              		.loc 1 176 3 view .LVU75
 322 0038 009B     		ldr	r3, [sp]
 323              	.LBE8:
 176:Core/Src/main.c **** 
 324              		.loc 1 176 3 view .LVU76
 178:Core/Src/main.c **** 
 325              		.loc 1 178 3 view .LVU77
 326              	.L16:
 178:Core/Src/main.c **** 
 327              		.loc 1 178 48 discriminator 1 view .LVU78
 178:Core/Src/main.c **** 
 328              		.loc 1 178 9 discriminator 1 view .LVU79
 178:Core/Src/main.c **** 
 329              		.loc 1 178 10 is_stmt 0 discriminator 1 view .LVU80
 330 003a 1B4B     		ldr	r3, .L22
 331 003c 9B69     		ldr	r3, [r3, #24]
 178:Core/Src/main.c **** 
 332              		.loc 1 178 9 discriminator 1 view .LVU81
 333 003e 13F4005F 		tst	r3, #8192
 334 0042 FAD0     		beq	.L16
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 335              		.loc 1 183 3 is_stmt 1 view .LVU82
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 336              		.loc 1 183 36 is_stmt 0 view .LVU83
 337 0044 0222     		movs	r2, #2
 338 0046 0992     		str	r2, [sp, #36]
ARM GAS  /tmp/ccgalnVP.s 			page 16


 184:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 339              		.loc 1 184 3 is_stmt 1 view .LVU84
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = 64;
 340              		.loc 1 184 30 is_stmt 0 view .LVU85
 341 0048 0124     		movs	r4, #1
 342 004a 0C94     		str	r4, [sp, #48]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 343              		.loc 1 185 3 is_stmt 1 view .LVU86
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 344              		.loc 1 185 41 is_stmt 0 view .LVU87
 345 004c 4023     		movs	r3, #64
 346 004e 0D93     		str	r3, [sp, #52]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 347              		.loc 1 186 3 is_stmt 1 view .LVU88
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 348              		.loc 1 186 34 is_stmt 0 view .LVU89
 349 0050 1292     		str	r2, [sp, #72]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 350              		.loc 1 187 3 is_stmt 1 view .LVU90
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 351              		.loc 1 187 35 is_stmt 0 view .LVU91
 352 0052 0023     		movs	r3, #0
 353 0054 1393     		str	r3, [sp, #76]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 354              		.loc 1 188 3 is_stmt 1 view .LVU92
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 355              		.loc 1 188 30 is_stmt 0 view .LVU93
 356 0056 0420     		movs	r0, #4
 357 0058 1490     		str	r0, [sp, #80]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 358              		.loc 1 189 3 is_stmt 1 view .LVU94
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 1;
 359              		.loc 1 189 30 is_stmt 0 view .LVU95
 360 005a 0C21     		movs	r1, #12
 361 005c 1591     		str	r1, [sp, #84]
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 362              		.loc 1 190 3 is_stmt 1 view .LVU96
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 363              		.loc 1 190 30 is_stmt 0 view .LVU97
 364 005e 1694     		str	r4, [sp, #88]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 365              		.loc 1 191 3 is_stmt 1 view .LVU98
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 366              		.loc 1 191 30 is_stmt 0 view .LVU99
 367 0060 1790     		str	r0, [sp, #92]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 368              		.loc 1 192 3 is_stmt 1 view .LVU100
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 369              		.loc 1 192 30 is_stmt 0 view .LVU101
 370 0062 1892     		str	r2, [sp, #96]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 371              		.loc 1 193 3 is_stmt 1 view .LVU102
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 372              		.loc 1 193 32 is_stmt 0 view .LVU103
 373 0064 1991     		str	r1, [sp, #100]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 374              		.loc 1 194 3 is_stmt 1 view .LVU104
ARM GAS  /tmp/ccgalnVP.s 			page 17


 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 375              		.loc 1 194 35 is_stmt 0 view .LVU105
 376 0066 1A93     		str	r3, [sp, #104]
 195:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 377              		.loc 1 195 3 is_stmt 1 view .LVU106
 195:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 378              		.loc 1 195 34 is_stmt 0 view .LVU107
 379 0068 1B93     		str	r3, [sp, #108]
 196:Core/Src/main.c ****   {
 380              		.loc 1 196 3 is_stmt 1 view .LVU108
 196:Core/Src/main.c ****   {
 381              		.loc 1 196 7 is_stmt 0 view .LVU109
 382 006a 09A8     		add	r0, sp, #36
 383 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 384              	.LVL12:
 196:Core/Src/main.c ****   {
 385              		.loc 1 196 6 discriminator 1 view .LVU110
 386 0070 A8B9     		cbnz	r0, .L20
 203:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 387              		.loc 1 203 3 is_stmt 1 view .LVU111
 203:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
 388              		.loc 1 203 31 is_stmt 0 view .LVU112
 389 0072 3F23     		movs	r3, #63
 390 0074 0193     		str	r3, [sp, #4]
 206:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 391              		.loc 1 206 3 is_stmt 1 view .LVU113
 206:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 392              		.loc 1 206 34 is_stmt 0 view .LVU114
 393 0076 0323     		movs	r3, #3
 394 0078 0293     		str	r3, [sp, #8]
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 395              		.loc 1 207 3 is_stmt 1 view .LVU115
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 396              		.loc 1 207 35 is_stmt 0 view .LVU116
 397 007a 0023     		movs	r3, #0
 398 007c 0393     		str	r3, [sp, #12]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 399              		.loc 1 208 3 is_stmt 1 view .LVU117
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 400              		.loc 1 208 35 is_stmt 0 view .LVU118
 401 007e 0823     		movs	r3, #8
 402 0080 0493     		str	r3, [sp, #16]
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 403              		.loc 1 209 3 is_stmt 1 view .LVU119
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 404              		.loc 1 209 36 is_stmt 0 view .LVU120
 405 0082 4023     		movs	r3, #64
 406 0084 0593     		str	r3, [sp, #20]
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 407              		.loc 1 210 3 is_stmt 1 view .LVU121
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 408              		.loc 1 210 36 is_stmt 0 view .LVU122
 409 0086 0693     		str	r3, [sp, #24]
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 410              		.loc 1 211 3 is_stmt 1 view .LVU123
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 411              		.loc 1 211 36 is_stmt 0 view .LVU124
ARM GAS  /tmp/ccgalnVP.s 			page 18


 412 0088 4FF48062 		mov	r2, #1024
 413 008c 0792     		str	r2, [sp, #28]
 212:Core/Src/main.c **** 
 414              		.loc 1 212 3 is_stmt 1 view .LVU125
 212:Core/Src/main.c **** 
 415              		.loc 1 212 36 is_stmt 0 view .LVU126
 416 008e 0893     		str	r3, [sp, #32]
 214:Core/Src/main.c ****   {
 417              		.loc 1 214 3 is_stmt 1 view .LVU127
 214:Core/Src/main.c ****   {
 418              		.loc 1 214 7 is_stmt 0 view .LVU128
 419 0090 0121     		movs	r1, #1
 420 0092 01A8     		add	r0, sp, #4
 421 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 422              	.LVL13:
 214:Core/Src/main.c ****   {
 423              		.loc 1 214 6 discriminator 1 view .LVU129
 424 0098 18B9     		cbnz	r0, .L21
 218:Core/Src/main.c **** 
 425              		.loc 1 218 1 view .LVU130
 426 009a 1CB0     		add	sp, sp, #112
 427              	.LCFI8:
 428              		.cfi_remember_state
 429              		.cfi_def_cfa_offset 8
 430              		@ sp needed
 431 009c 10BD     		pop	{r4, pc}
 432              	.L20:
 433              	.LCFI9:
 434              		.cfi_restore_state
 198:Core/Src/main.c ****   }
 435              		.loc 1 198 5 is_stmt 1 view .LVU131
 436 009e FFF7FEFF 		bl	Error_Handler
 437              	.LVL14:
 438              	.L21:
 216:Core/Src/main.c ****   }
 439              		.loc 1 216 5 view .LVU132
 440 00a2 FFF7FEFF 		bl	Error_Handler
 441              	.LVL15:
 442              	.L23:
 443 00a6 00BF     		.align	2
 444              	.L22:
 445 00a8 00480258 		.word	1476544512
 446              		.cfi_endproc
 447              	.LFE150:
 449              		.section	.text.main,"ax",%progbits
 450              		.align	1
 451              		.global	main
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 456              	main:
 457              	.LFB149:
  94:Core/Src/main.c **** 
 458              		.loc 1 94 1 view -0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccgalnVP.s 			page 19


 462 0000 08B5     		push	{r3, lr}
 463              	.LCFI10:
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 3, -8
 466              		.cfi_offset 14, -4
 101:Core/Src/main.c **** 
 467              		.loc 1 101 3 view .LVU134
 468 0002 FFF7FEFF 		bl	MPU_Config
 469              	.LVL16:
 106:Core/Src/main.c **** 
 470              		.loc 1 106 3 view .LVU135
 471 0006 FFF7FEFF 		bl	HAL_Init
 472              	.LVL17:
 113:Core/Src/main.c **** 
 473              		.loc 1 113 3 view .LVU136
 474 000a FFF7FEFF 		bl	SystemClock_Config
 475              	.LVL18:
 120:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 476              		.loc 1 120 3 view .LVU137
 477 000e FFF7FEFF 		bl	MX_GPIO_Init
 478              	.LVL19:
 123:Core/Src/main.c ****   // int result = bar(c);
 479              		.loc 1 123 3 view .LVU138
 129:Core/Src/main.c ****   BSP_LED_Init(LED_YELLOW);
 480              		.loc 1 129 3 view .LVU139
 481 0012 0020     		movs	r0, #0
 482 0014 FFF7FEFF 		bl	BSP_LED_Init
 483              	.LVL20:
 130:Core/Src/main.c ****   BSP_LED_Init(LED_RED);
 484              		.loc 1 130 3 view .LVU140
 485 0018 0120     		movs	r0, #1
 486 001a FFF7FEFF 		bl	BSP_LED_Init
 487              	.LVL21:
 131:Core/Src/main.c **** 
 488              		.loc 1 131 3 view .LVU141
 489 001e 0220     		movs	r0, #2
 490 0020 FFF7FEFF 		bl	BSP_LED_Init
 491              	.LVL22:
 134:Core/Src/main.c **** 
 492              		.loc 1 134 3 view .LVU142
 493 0024 0121     		movs	r1, #1
 494 0026 0020     		movs	r0, #0
 495 0028 FFF7FEFF 		bl	BSP_PB_Init
 496              	.LVL23:
 137:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 497              		.loc 1 137 3 view .LVU143
 137:Core/Src/main.c ****   BspCOMInit.WordLength = COM_WORDLENGTH_8B;
 498              		.loc 1 137 25 is_stmt 0 view .LVU144
 499 002c 0B49     		ldr	r1, .L28
 500 002e 4FF4E133 		mov	r3, #115200
 501 0032 0B60     		str	r3, [r1]
 138:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 502              		.loc 1 138 3 is_stmt 1 view .LVU145
 138:Core/Src/main.c ****   BspCOMInit.StopBits   = COM_STOPBITS_1;
 503              		.loc 1 138 25 is_stmt 0 view .LVU146
 504 0034 0020     		movs	r0, #0
 505 0036 4860     		str	r0, [r1, #4]
ARM GAS  /tmp/ccgalnVP.s 			page 20


 139:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 506              		.loc 1 139 3 is_stmt 1 view .LVU147
 139:Core/Src/main.c ****   BspCOMInit.Parity     = COM_PARITY_NONE;
 507              		.loc 1 139 25 is_stmt 0 view .LVU148
 508 0038 0881     		strh	r0, [r1, #8]	@ movhi
 140:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 509              		.loc 1 140 3 is_stmt 1 view .LVU149
 140:Core/Src/main.c ****   BspCOMInit.HwFlowCtl  = COM_HWCONTROL_NONE;
 510              		.loc 1 140 25 is_stmt 0 view .LVU150
 511 003a 4881     		strh	r0, [r1, #10]	@ movhi
 141:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 512              		.loc 1 141 3 is_stmt 1 view .LVU151
 141:Core/Src/main.c ****   if (BSP_COM_Init(COM1, &BspCOMInit) != BSP_ERROR_NONE)
 513              		.loc 1 141 25 is_stmt 0 view .LVU152
 514 003c 8881     		strh	r0, [r1, #12]	@ movhi
 142:Core/Src/main.c ****   {
 515              		.loc 1 142 3 is_stmt 1 view .LVU153
 142:Core/Src/main.c ****   {
 516              		.loc 1 142 7 is_stmt 0 view .LVU154
 517 003e FFF7FEFF 		bl	BSP_COM_Init
 518              	.LVL24:
 142:Core/Src/main.c ****   {
 519              		.loc 1 142 6 discriminator 1 view .LVU155
 520 0042 40B9     		cbnz	r0, .L27
 521              	.L25:
 149:Core/Src/main.c ****   {
 522              		.loc 1 149 3 is_stmt 1 view .LVU156
 155:Core/Src/main.c ****     HAL_Delay(1000);
 523              		.loc 1 155 5 view .LVU157
 524 0044 2021     		movs	r1, #32
 525 0046 0648     		ldr	r0, .L28+4
 526 0048 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 527              	.LVL25:
 156:Core/Src/main.c ****   }
 528              		.loc 1 156 5 discriminator 1 view .LVU158
 529 004c 4FF47A70 		mov	r0, #1000
 530 0050 FFF7FEFF 		bl	HAL_Delay
 531              	.LVL26:
 149:Core/Src/main.c ****   {
 532              		.loc 1 149 9 view .LVU159
 533 0054 F6E7     		b	.L25
 534              	.L27:
 144:Core/Src/main.c ****   }
 535              		.loc 1 144 5 view .LVU160
 536 0056 FFF7FEFF 		bl	Error_Handler
 537              	.LVL27:
 538              	.L29:
 539 005a 00BF     		.align	2
 540              	.L28:
 541 005c 00000000 		.word	BspCOMInit
 542 0060 00000258 		.word	1476526080
 543              		.cfi_endproc
 544              	.LFE149:
 546              		.global	j
 547              		.section	.bss.j,"aw",%nobits
 548              		.align	2
 551              	j:
ARM GAS  /tmp/ccgalnVP.s 			page 21


 552 0000 00000000 		.space	4
 553              		.global	k
 554              		.section	.bss.k,"aw",%nobits
 555              		.align	2
 558              	k:
 559 0000 00000000 		.space	4
 560              		.global	BspCOMInit
 561              		.section	.bss.BspCOMInit,"aw",%nobits
 562              		.align	2
 565              	BspCOMInit:
 566 0000 00000000 		.space	16
 566      00000000 
 566      00000000 
 566      00000000 
 567              		.text
 568              	.Letext0:
 569              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 570              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h723xx.h"
 571              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 572              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 573              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 574              		.file 8 "Drivers/BSP/STM32H7xx_Nucleo/stm32h7xx_nucleo.h"
 575              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 576              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 577              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 578              		.file 12 "<built-in>"
ARM GAS  /tmp/ccgalnVP.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccgalnVP.s:20     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccgalnVP.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccgalnVP.s:75     .text.MX_GPIO_Init:00000038 $d
     /tmp/ccgalnVP.s:80     .text.MPU_Config:00000000 $t
     /tmp/ccgalnVP.s:85     .text.MPU_Config:00000000 MPU_Config
     /tmp/ccgalnVP.s:163    .text.foo:00000000 $t
     /tmp/ccgalnVP.s:169    .text.foo:00000000 foo
     /tmp/ccgalnVP.s:188    .text.bar:00000000 $t
     /tmp/ccgalnVP.s:194    .text.bar:00000000 bar
     /tmp/ccgalnVP.s:230    .text.Error_Handler:00000000 $t
     /tmp/ccgalnVP.s:236    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccgalnVP.s:268    .text.SystemClock_Config:00000000 $t
     /tmp/ccgalnVP.s:274    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccgalnVP.s:445    .text.SystemClock_Config:000000a8 $d
     /tmp/ccgalnVP.s:450    .text.main:00000000 $t
     /tmp/ccgalnVP.s:456    .text.main:00000000 main
     /tmp/ccgalnVP.s:541    .text.main:0000005c $d
     /tmp/ccgalnVP.s:565    .bss.BspCOMInit:00000000 BspCOMInit
     /tmp/ccgalnVP.s:551    .bss.j:00000000 j
     /tmp/ccgalnVP.s:548    .bss.j:00000000 $d
     /tmp/ccgalnVP.s:558    .bss.k:00000000 k
     /tmp/ccgalnVP.s:555    .bss.k:00000000 $d
     /tmp/ccgalnVP.s:562    .bss.BspCOMInit:00000000 $d

UNDEFINED SYMBOLS
HAL_MPU_Disable
HAL_MPU_ConfigRegion
HAL_MPU_Enable
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
BSP_LED_Init
BSP_PB_Init
BSP_COM_Init
HAL_GPIO_TogglePin
HAL_Delay
